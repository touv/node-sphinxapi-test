<?php

//
// Ce script est chargé de concatener tous les fichier ini
// du répertoire conf.d/ dans l'ordre alphabétique
//

function _parse_ini_file($lines, $process_sections = false) {
  $process_sections = ($process_sections !== true) ? false : true;

  $ini = $lines;
  if (count($ini) == 0) {return array();}

  $sections = array();
  $values = array();
  $result = array();
  $globals = array();
  $i = 0;
  foreach ($ini as $line) {
    $line = trim($line);
    $line = str_replace("\t", " ", $line);

    // Comments
    if (!preg_match('/^[a-zA-Z0-9[]/', $line)) {continue;}

    // Sections
    if ($line{0} == '[') {
      $tmp = explode(']', $line);
      $sections[] = trim(substr($tmp[0], 1));
      $i++;
      continue;
    }

    // Key-value pair
    list($key, $value) = explode('=', $line, 2);
    $key = trim($key);
    $value = trim($value);
    if (strstr($value, ";")) {
      $tmp = explode(';', $value);
      if (count($tmp) == 2) {
        if ((($value{0} != '"') && ($value{0} != "'")) ||
            preg_match('/^".*"\s*;/', $value) || preg_match('/^".*;[^"]*$/', $value) ||
            preg_match("/^'.*'\s*;/", $value) || preg_match("/^'.*;[^']*$/", $value) ){
          $value = $tmp[0];
        }
      } else {
        if ($value{0} == '"') {
//          $value = preg_replace('/^"(.*)".*/', '$1', $value);
        } elseif ($value{0} == "'") {
//          $value = preg_replace("/^'(.*)'.*/", '$1', $value);
        } else {
          $value = $tmp[0];
        }
      }
    }
    $value = trim($value);
//    $value = trim($value, "'\"");

    if ($i == 0) {
      if (substr($line, -1, 2) == '[]') {
        $globals[$key][] = $value;
      } else {
        $globals[$key] = $value;
      }
    } else {
      if (substr($line, -1, 2) == '[]') {
        $values[$i-1][$key][] = $value;
      } else {
        $values[$i-1][$key] = $value;
      }
    }
  }

  for($j = 0; $j < $i; $j++) {
    if ($process_sections === true) {
      if (isset($values[$j])) {
        $result[$sections[$j]] = $values[$j];
      }
    } else {
      $result[] = $values[$j];
    }
  }

  return $result + $globals;
}

function recursiveArrayMerge($array1, $array2){
    reset ($array2);
    while(key($array2)!==null) {
        if (is_array(current($array2)) && isset($array1[key($array2)])) {
            $array1[key($array2)] = recursiveArrayMerge($array1[key($array2)],current($array2));
        } else {
            $array1[key($array2)] = current($array2);
        }
        next($array2);
    }
    return $array1;
}

$final_php_ini = array();
foreach( glob(getenv('APPNAME_HOME').'/etc/php5/conf.d/*') as $f) {
  $lines = file($f);
  $lines = array_merge(array('['.basename($f).']'), $lines);
  $final_php_ini = recursiveArrayMerge( $final_php_ini, _parse_ini_file($lines, true) );
}

// maintenant on ecrit le contenu final du php.ini
foreach($final_php_ini as $k => $v) {
  echo "[".$k."]\n";
  if (count($final_php_ini[$k]) == 0) continue;
  foreach($final_php_ini[$k] as $k2 => $v2) {
    $with_quote = false;
    echo $k2.' = '.($with_quote?'"':'').$v2.($with_quote?'"':'')."\n";
  }
}
